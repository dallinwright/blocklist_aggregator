{"/Users/dallinwright/projects/blocklist_aggregator/src/index.ts":{"path":"/Users/dallinwright/projects/blocklist_aggregator/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"14":{"start":{"line":13,"column":14},"end":{"line":13,"column":32}},"15":{"start":{"line":14,"column":23},"end":{"line":22,"column":2}},"16":{"start":{"line":14,"column":46},"end":{"line":22,"column":1}},"17":{"start":{"line":24,"column":4},"end":{"line":37,"column":7}},"18":{"start":{"line":25,"column":8},"end":{"line":36,"column":9}},"19":{"start":{"line":26,"column":28},"end":{"line":26,"column":65}},"20":{"start":{"line":27,"column":25},"end":{"line":27,"column":67}},"21":{"start":{"line":28,"column":12},"end":{"line":28,"column":34}},"22":{"start":{"line":29,"column":12},"end":{"line":29,"column":44}},"23":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"24":{"start":{"line":31,"column":16},"end":{"line":31,"column":47}},"25":{"start":{"line":35,"column":12},"end":{"line":35,"column":71}},"26":{"start":{"line":39,"column":0},"end":{"line":39,"column":30}},"27":{"start":{"line":41,"column":4},"end":{"line":48,"column":5}},"28":{"start":{"line":42,"column":22},"end":{"line":42,"column":37}},"29":{"start":{"line":43,"column":8},"end":{"line":43,"column":35}},"30":{"start":{"line":44,"column":8},"end":{"line":44,"column":27}},"31":{"start":{"line":47,"column":8},"end":{"line":47,"column":62}},"32":{"start":{"line":50,"column":0},"end":{"line":59,"column":3}},"33":{"start":{"line":50,"column":48},"end":{"line":59,"column":2}},"34":{"start":{"line":51,"column":4},"end":{"line":58,"column":5}},"35":{"start":{"line":52,"column":8},"end":{"line":52,"column":47}},"36":{"start":{"line":53,"column":8},"end":{"line":53,"column":42}},"37":{"start":{"line":54,"column":8},"end":{"line":54,"column":41}},"38":{"start":{"line":57,"column":8},"end":{"line":57,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":14,"column":23},"end":{"line":14,"column":24}},"loc":{"start":{"line":14,"column":46},"end":{"line":22,"column":1}},"line":14},"8":{"name":"cloneRepo","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":18}},"loc":{"start":{"line":23,"column":25},"end":{"line":38,"column":1}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":43},"end":{"line":24,"column":44}},"loc":{"start":{"line":24,"column":56},"end":{"line":37,"column":5}},"line":24},"10":{"name":"getLists","decl":{"start":{"line":40,"column":9},"end":{"line":40,"column":17}},"loc":{"start":{"line":40,"column":24},"end":{"line":49,"column":1}},"line":40},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":18},"end":{"line":50,"column":19}},"loc":{"start":{"line":50,"column":48},"end":{"line":59,"column":2}},"line":50},"12":{"name":"(anonymous_12)","decl":{"start":{"line":50,"column":82},"end":{"line":50,"column":83}},"loc":{"start":{"line":50,"column":95},"end":{"line":59,"column":1}},"line":50}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":25,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":36,"column":9}},{"start":{"line":25,"column":8},"end":{"line":36,"column":9}}],"line":25},"6":{"loc":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},{"start":{"line":30,"column":12},"end":{"line":32,"column":13}}],"line":30},"7":{"loc":{"start":{"line":41,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":48,"column":5}},{"start":{"line":41,"column":4},"end":{"line":48,"column":5}}],"line":41}},"s":{"0":1,"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":2,"12":1,"13":1,"14":1,"15":1,"16":0,"17":2,"18":2,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"f":{"0":2,"1":0,"2":0,"3":2,"4":0,"5":0,"6":1,"7":0,"8":2,"9":2,"10":0,"11":0,"12":0},"b":{"0":[1,1,1],"1":[0,0],"2":[2,2],"3":[1,0],"4":[2,2],"5":[1,1],"6":[0,1],"7":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/dallinwright/projects/blocklist_aggregator/src/index.ts","sources":["/Users/dallinwright/projects/blocklist_aggregator/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA,MAAM,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAEjC,MAAM,cAAc,GAAG,CAAC,UAAkB,EAAE,IAAS,EAAE,EAAE,CAAC,CAAC;IACvD,UAAU,EAAE,UAAU;IACtB,OAAO,EAAE;QACL,6BAA6B,EAAE,GAAG;QAClC,8BAA8B,EAAE,gDAAgD;QAChF,cAAc,EAAE,kBAAkB;KACrC;IACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;CAC7B,CAAC,CAAC;AAEH,SAAsB,SAAS,CAAC,IAAwB;;QACpD,IAAI,IAAI,EAAE;YACN,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACtD,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YAExD,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACtB,KAAK,CAAC,IAAI,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC;YAEhC,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE;gBACf,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;aAClC;SACJ;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC9D;IACL,CAAC;CAAA;AAdD,8BAcC;AAED,SAAS,QAAQ,CAAC,IAAwB;IACtC,IAAI,IAAI,EAAE;QACN,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACtB;SAAM;QACH,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;KACzD;AACL,CAAC;AAGY,QAAA,OAAO,GAAY,CAAO,KAAU,EAAE,OAAgB,EAAE,QAAkB,EAAE,EAAE;IACvF,IAAI;QACA,MAAM,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAElC,OAAO,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACpC;IAAC,OAAO,CAAC,EAAE;QACR,OAAO,cAAc,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;KACzC;AACL,CAAC,CAAA,CAAC","sourcesContent":["import {Callback, Context, Handler} from 'aws-lambda';\n\nconst shell = require('shelljs');\n\nconst createResponse = (statusCode: number, body: any) => ({\n    statusCode: statusCode,\n    headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\n        \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n});\n\nexport async function cloneRepo(repo: string | undefined) {\n    if (repo) {\n        const gitPath = repo.slice(repo.lastIndexOf('/') + 1);\n        const path = gitPath.slice(0, gitPath.lastIndexOf('.'));\n\n        shell.rm('-rf', path);\n        shell.exec(`git clone ${repo}`);\n\n        if (shell.error()) {\n            throw new Error(shell.error());\n        }\n    } else {\n        throw new Error(\"No repo given for ip blacklist baseline\");\n    }\n}\n\nfunction getLists(list: string | undefined) {\n    if (list) {\n        const lists = list.split(',');\n        console.log('BLOCK LISTS');\n        console.log(lists);\n    } else {\n        throw new Error(\"No Env var specifying block lists.\");\n    }\n}\n\n\nexport const handler: Handler = async (event: any, context: Context, callback: Callback) => {\n    try {\n        await cloneRepo(process.env.BASE_REPO);\n        getLists(process.env.BLOCK_LISTS);\n\n        return createResponse(200, 'ok');\n    } catch (e) {\n        return createResponse(503, e.message);\n    }\n};\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cf737084b795c6d7940b4adf61cb406eaf9b95f4","contentHash":"ade23f2bd76afa4f406aa0bc47add2469323b87e4529a253d4a433dc3937161c"}}